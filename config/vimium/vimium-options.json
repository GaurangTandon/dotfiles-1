{
  "settingsVersion": "1.66",
  "exclusionRules": [
    {
      "pattern": "https?://mail.google.com/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://localhost:3000/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://meet.google.com/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://leetcode.com/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://localhost:8888/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://10.4.20.32:9090/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://localhost:8000/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://web.iiit.ac.in/~yoogottam.khandelwal/spaceapps/*",
      "passKeys": ""
    },
    {
      "pattern": "https?://yoogottamk.github.io/SpaceApps2020/*",
      "passKeys": ""
    }
  ],
  "filterLinkHints": false,
  "waitForEnterForFilteredHints": true,
  "hideHud": false,
  "keyMappings": "# Insert your preferred key mappings here.\nmap J nextTab\nmap K previousTab",
  "linkHintCharacters": "sadfjklewcmpgh",
  "linkHintNumbers": "0123456789",
  "newTabUrl": "about:newtab",
  "nextPatterns": "next,more,newer,>,›,→,»,≫,>>",
  "previousPatterns": "prev,previous,back,older,<,‹,←,«,≪,<<",
  "regexFindMode": true,
  "ignoreKeyboardLayout": false,
  "scrollStepSize": 60,
  "smoothScroll": true,
  "grabBackFocus": false,
  "searchEngines": "w: https://www.wikipedia.org/w/index.php?title=Special:Search&search=%s Wikipedia\nd: https://duckduckgo.com/?q=%s DuckDuckGo\nl: https://www.google.com/search?q=%s&btnI I'm feeling lucky\ny: https://www.youtube.com/results?search_query=%s Youtube",
  "searchUrl": "https://www.google.com/search?q=",
  "userDefinedLinkHintCss": "div > .vimiumHintMarker {\n/* linkhint boxes */\nbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#FFF785),\n  color-stop(100%,#FFC542));\nborder: 1px solid #E3BE23;\n}\n\ndiv > .vimiumHintMarker span {\n/* linkhint text */\ncolor: black;\nfont-weight: bold;\nfont-size: 12px;\n}\n\ndiv > .vimiumHintMarker > .matchingCharacter {\n}"
}