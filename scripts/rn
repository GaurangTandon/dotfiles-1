#!/bin/bash

# command line argument parsing
# if arg1 exists:
if [ ! -z "$1" ]
then
    # if arg is neither -t nor -h; exit with error code 1
    if [ "$1" != "-t" ] && [ "$1" != "-h" ]
    then
        echo -e "Syntax: rn [ -th ]\n\t-t: test, don't actually rename\n\t-h: display this help message"
        exit 1
    # if arg was -h; exit with error code 0
    elif [ "$1" == "-h" ]
    then
        echo -e "Syntax: rn [ -th ]\n\t-t: test, don't actually rename\n\t-h: display this help message"
        exit 0
    fi
fi

# store the old file name in a file
ls | awk '{printf("\"%s\"\n", $0)}' > .__f_old

# trim multiple spaces and remove `|` character
# also, substitute ` ` and `-` with `_`
ls | tr -d '|' | tr -s ' ' | awk '{ printf("\"%s\"\n", $0) }' | sed 's/[\ -]/_/g' | tr -s '_' > .__f_new

# display the change that is going to take place
paste .__f_old .__f_new -d"\n" | sed -n 'h;n;H;x; s:\n: --> :; p'

# rename the file.. with a backup so that no files get deleted
# if files are same, don't show the err output `mv: file1 and file1 are same`
if [ -z "$1" ]
then
    paste .__f_old .__f_new -d"\n" | xargs -n2 mv --backup=t &> /dev/null
fi

# remove my generated files
rm .__f_old .__f_new
